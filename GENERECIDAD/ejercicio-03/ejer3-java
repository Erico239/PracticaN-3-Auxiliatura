// TEMA: GENERICIDAD
// Clase generica Catalogo<T> para almacenar productos o libros
// a) Metodos agregar() y buscar()
// b) Prueba con libros
// c) Prueba con productos

interface ConNombre {
    String getNombre();
}

class Libro implements ConNombre {
    private String nombre;
    private String autor;
    
    public Libro(String nombre, String autor) {
        this.nombre = nombre;
        this.autor = autor;
    }
    
    @Override
    public String getNombre() {
        return nombre;
    }
    
    @Override
    public String toString() {
        return nombre + " (" + autor + ")";
    }
}

class Producto implements ConNombre {
    private String nombre;
    private double precio;
    
    public Producto(String nombre, double precio) {
        this.nombre = nombre;
        this.precio = precio;
    }
    
    @Override
    public String getNombre() {
        return nombre;
    }
    
    @Override
    public String toString() {
        return nombre + " - $" + precio;
    }
}

class Catalogo<T extends ConNombre> {
    private java.util.List<T> elementos = new java.util.ArrayList<>();
    
    public void agregar(T elemento) {
        elementos.add(elemento);
    }
    
    public T buscar(String nombre) {
        for (T elemento : elementos) {
            if (elemento.getNombre().equals(nombre)) {
                return elemento;
            }
        }
        return null;
    }
    
    public void mostrar() {
        for (T elemento : elementos) {
            System.out.println(" - " + elemento);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        
        Catalogo<Libro> catalogoLibros = new Catalogo<>();
        catalogoLibros.agregar(new Libro("El Principito", "Antoine de Saint-Exupery"));
        catalogoLibros.agregar(new Libro("1984", "George Orwell"));
        
        System.out.println("Catalogo de Libros:");
        catalogoLibros.mostrar();
        
        Libro libro = catalogoLibros.buscar("1984");
        System.out.println("\nBusqueda: " + libro);
        
        Catalogo<Producto> catalogoProductos = new Catalogo<>();
        catalogoProductos.agregar(new Producto("Laptop", 1200.0));
        catalogoProductos.agregar(new Producto("Telefono", 800.0));
        
        System.out.println("\nCatalogo de Productos:");
        catalogoProductos.mostrar();
        
        Producto producto = catalogoProductos.buscar("Telefono");
        System.out.println("\nBusqueda: " + producto);
    }
}
