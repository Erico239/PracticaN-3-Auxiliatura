# TEMA: GENERICIDAD
# Clase generica Pila[T] para operaciones de apilar y desapilar
# a) Metodo apilar
# b) Metodo desapilar
# c) Prueba con diferentes tipos de datos
# d) Mostrar datos de la pila

from typing import Generic, TypeVar, List

T = TypeVar('T')

class Pila(Generic[T]):
    def __init__(self):
        self.elementos: List[T] = []
    
    def apilar(self, elemento: T) -> None:
        self.elementos.append(elemento)
    
    
    def desapilar(self) -> T:
        if self.esta_vacia():
            raise Exception("La pila esta vacia")
        return self.elementos.pop()
    
    
    def esta_vacia(self) -> bool:
        return len(self.elementos) == 0
    
    def mostrar(self) -> None:
        print("Pila:", end=" ")
        for elemento in reversed(self.elementos):
            print(elemento, end=" ")
        print()

if __name__ == "__main__":
    
    pila_enteros = Pila[int]()
    pila_enteros.apilar(100)
    pila_enteros.apilar(200)
    pila_enteros.apilar(300)
    
    pila_enteros.mostrar()
    print("Desapilado:", pila_enteros.desapilar())
    pila_enteros.mostrar()
    
    pila_cadenas = Pila[str]()
    pila_cadenas.apilar("Programacion")
    pila_cadenas.apilar("Estructuras")
    pila_cadenas.apilar("Datos")
    
    pila_cadenas.mostrar()
    print("Desapilado:", pila_cadenas.desapilar())
    pila_cadenas.mostrar()
